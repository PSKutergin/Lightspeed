Тестовое задание для data-инженера
ETL
Скрипты для задания необходимо выполнить на Python (v2 или v3) и SQL. Причём в большей мере надо стараться, чтобы логика была написана именно на SQL (в том числе без хранимых процедур и кода на plpgsql).  
В качестве СУБД использовать PostgreSQL.

1.Загрузить любым способом CSV-файл из https://www.kaggle.com/noaa/hurricane-database#atlantic.csv в PostgreSQL БД в таблицу cyclones. Это просто исходные данные для задания.

2. Написать ETL-скрипт, который для указанного календарного месяца генерирует CSV-файлы с данными из cyclones. Данные для каждого дня месяца должны быть в отдельном файле. Имена файлов сделать вида cyclones_20140128.csv 
В каждом файле для каждого циклона (из тех для кого есть записи за заданный день) только одна строка с его последним статусом:
ID
date
status — последний статус

Для справки коды статусов:
TD – Tropical cyclone of tropical depression intensity (< 34 knots)
TS – Tropical cyclone of tropical storm intensity (34-63 knots)
HU – Tropical cyclone of hurricane intensity (> 64 knots)
EX – Extratropical cyclone (of any intensity)
SD – Subtropical cyclone of subtropical depression intensity (< 34 knots)
SS – Subtropical cyclone of subtropical storm intensity (> 34 knots)
LO – A low that is neither a tropical cyclone, a subtropical cyclone, nor an extratropical cyclone (of any intensity)
WV – Tropical Wave (of any intensity)
DB – Disturbance (of any intensity) 

3.Сгенерировать при помощи полученного в п.2 скрипта файлы для date >= 2013-01-01

4. Написать второй ETL-скрипт, который будет уметь принимать один файл вида cyclones_20140128.csv и формировать историю статусов циклонов в таблице cyclones_history в PostgreSQL. 

Колонки cyclones_history:
date_from                   
date_end
id
status
Принцип — значение status отличное от прежнего (а также отсутствие записи/статуса) означает начало нового периода (прежний период «закрывается» вчерашней датой).

Предполагается запуск скрипта для загрузки данных последовательно день за днем (в production просто каждый день). Исходим и того, что не бывает повторной загрузки за какой-то предыдущий загруженный день. Но надо учесть возможность повторной загрузки файла за последний день (данные в файле изменились). То есть при загрузке повторно данных за последний день история статусов циклонов должна быть перестроена так, будто бы предыдущей загрузки за этот день не было вовсе.

5.  Загрузить историю из файлов полученных в п.3

В качестве результатов для проверки задания необходимо предоставить скрипты реализованные в п.2 и в п.4, а также детальная информация (команды, скрипты и пр.) выполнения п.3 и п:5.